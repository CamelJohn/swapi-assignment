{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\tikal-assignment\\\\swapi-client\\\\src\\\\components\\\\Welcome\\\\Welcome.js\",\n    _s = $RefreshSig$();\n\nimport css from './Welcome.module.css';\nimport { useEffect } from 'react';\nimport useGetData from '../../hooks/useGetData.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Welcome = () => {\n  _s();\n\n  const [timer, cachedData, getData, text, setText] = useGetData('scroll-text');\n  useEffect(() => {\n    let secondTimer;\n\n    if (!cachedData) {\n      (async () => await getData())();\n    } else {\n      secondTimer = setTimeout(() => setText(JSON.parse(cachedData)), 1000);\n    }\n\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(secondTimer);\n    };\n  }, []);\n\n  const renderScrollingText = () => text.map((row, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: row\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 60\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Welcome,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css['scroll-text'],\n        children: [text && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Star Wars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }, this), text && renderScrollingText()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Welcome, \"8Z4ULdEBBK+zTR5xyUwjiUlgqiE=\", false, function () {\n  return [useGetData];\n});\n\n_c = Welcome;\nexport default Welcome;\n\nvar _c;\n\n$RefreshReg$(_c, \"Welcome\");","map":{"version":3,"sources":["C:/Users/User/Desktop/tikal-assignment/swapi-client/src/components/Welcome/Welcome.js"],"names":["css","useEffect","useGetData","Welcome","timer","cachedData","getData","text","setText","secondTimer","setTimeout","JSON","parse","clearTimeout","renderScrollingText","map","row","idx","wrapper"],"mappings":";;;AACA,OAAOA,GAAP,MAAgB,sBAAhB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,OAAnC,IAA8CN,UAAU,CAAC,aAAD,CAA9D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ;;AAEA,QAAI,CAACJ,UAAL,EAAiB;AACf,OAAC,YAAY,MAAMC,OAAO,EAA1B;AACD,KAFD,MAEO;AACLG,MAAAA,WAAW,GAAGC,UAAU,CAAC,MAAMF,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWP,UAAX,CAAD,CAAd,EAAwC,IAAxC,CAAxB;AACD;;AAED,WAAO,MAAM;AACXQ,MAAAA,YAAY,CAACT,KAAD,CAAZ;AACAS,MAAAA,YAAY,CAAEJ,WAAF,CAAZ;AACD,KAHD;AAID,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMK,mBAAmB,GAAG,MAAMP,IAAI,CAACQ,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,kBAAc;AAAA,cAAcD;AAAd,KAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,UAAvB,CAAlC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEjB,GAAG,CAACkB,OAApB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAElB,GAAG,CAACG,OAApB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEH,GAAG,CAAC,aAAD,CAAnB;AAAA,mBACGO,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADX,EAEGA,IAAI,IAAIO,mBAAmB,EAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9BD;;GAAMX,O;UACgDD,U;;;KADhDC,O;AAgCN,eAAeA,OAAf","sourcesContent":["\nimport css from './Welcome.module.css';\nimport { useEffect } from 'react';\nimport useGetData from '../../hooks/useGetData.js';\n\nconst Welcome = () => {\n  const [timer, cachedData, getData, text, setText] = useGetData('scroll-text');\n  \n  useEffect(() => {\n    let secondTimer;\n\n    if (!cachedData) {\n      (async () => await getData())();\n    } else {\n      secondTimer = setTimeout(() => setText(JSON.parse(cachedData)), 1000)\n    }\n\n    return () => {\n      clearTimeout(timer)\n      clearTimeout( secondTimer)\n    };\n  }, [])\n  \n  const renderScrollingText = () => text.map((row, idx) => <p key={idx}>{row}</p>);\n\n  return (\n    <div className={css.wrapper}>\n      <div className={css.Welcome}>\n        <div className={css['scroll-text']}>\n          {text && <h1>Star Wars</h1>}\n          {text && renderScrollingText()}\n        </div>\n      </div>\n    </div>\n    );\n}\n     \nexport default Welcome;"]},"metadata":{},"sourceType":"module"}